package org.example.Lists

/**
 * –ó–∞–¥–∞—á–∞: Single Number
 *
 * –î–∞–Ω –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, –≥–¥–µ –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ä–æ–≤–Ω–æ –¥–≤–∞–∂–¥—ã,
 * –∫—Ä–æ–º–µ –æ–¥–Ω–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
 *
 * –£—Å–ª–æ–≤–∏–µ:
 * - –†–µ—à–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∏–º–µ—Ç—å –ª–∏–Ω–µ–π–Ω—É—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å O(n)
 * - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ O(1) –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏
 *
 * –ü—Ä–∏–º–µ—Ä:
 * –í—Ö–æ–¥: [4, 1, 2, 1, 2]
 * –í—ã—Ö–æ–¥: 4
 */
class UniqueNumberFinder {
    fun singleNumber(nums: IntArray): Int {
        var result = 0
        for (n in nums) {
            result = result xor n
        }
        return result
    }
}

// –î–ª—è —Ç–µ—Å—Ç–∞ –≤ IDEA
fun main() {
    val finder = UniqueNumberFinder()
    val nums = intArrayOf(4, 1, 2, 1, 2)
    println(finder.singleNumber(nums)) // üëâ 4
}
