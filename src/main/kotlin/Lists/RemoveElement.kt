package org.example.Lists

//Дан целочисленный массив nums и целое число val. Нужно удалить все вхождения значения val из массива nums на месте (in-place). Порядок оставшихся элементов может быть изменён. Затем вернуть количество элементов в массиве, которые не равны val.
//
//        Пусть количество таких элементов будет k. Чтобы решение было принято, нужно:
//
//Изменить массив nums так, чтобы первые k элементов содержали все элементы, не равные val.
//
//        Остальная часть массива nums не важна (содержимое и размер).
//
//Вернуть k.

//Примеры
//Пример 1:
//Вход: nums = [3, 2, 2, 3], val = 3
//Выход: k = 2, nums = [2, 2, _, _]
//Пояснение: Функция возвращает 2, первые два элемента — это 2 и 2. Остальное не важно.
//
//Пример 2:
//Вход: nums = [0, 1, 2, 2, 3, 0, 4, 2], val = 2
//Выход: k = 5, nums = [0, 1, 4, 0, 3, _, _, _]
//Пояснение: Первые пять элементов — любые 5 элементов из входного массива, которые не равны 2 (порядок не важен).



fun main() {
    val nums = intArrayOf(0, 1, 2, 2, 3, 0, 4, 2)
    val `val` = 2

    val k = removeElement(nums, `val`)

    println("k = $k")
    println("nums (первые k элементов): ${nums.take(k)}")
}

fun removeElement(nums: IntArray, `val`: Int): Int {
    var k = 0 // индекс, куда пишем следующий элемент != val

    for (i in nums.indices) {
        if (nums[i] != `val`) {
            nums[k] = nums[i]
            k++
        }
    }

    return k
}
